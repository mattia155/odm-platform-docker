version: '3.3'

services:

  # Postgresql 11 shared DB
  PostgreSQL:
    environment:
      - POSTGRES_DB=${DATABASE_NAME}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_USER=${DATABASE_USERNAME}
    image: postgres:11-alpine
    env_file: .env
    ports:
      - "${DATABASE_PORT}:5432"
    volumes:
      - postgres:/var/lib/postgresql/data:rw
    healthcheck:
      test: [ "CMD", "pg_isready -U postgres" ]
      interval: 3s
      timeout: 5s
      retries: 5

  # Platform Spring Boot app
  platform:
    container_name: "odm-platform"
    depends_on:
      - PostgreSQL
    build:
      context: odm-platform-pp-services/
      args:
        SPRING_PROFILES_ACTIVE_BUILD: "dev"
        SPRING_PROFILES_ACTIVE: "docker"
        SPRING_PORT: "${PLATFORM_SPRING_PORT}"
        JAVA_OPTS: ""
        DATABASE_URL: "jdbc:postgresql://PostgreSQL:${DATABASE_PORT}/${DATABASE_NAME}"
        DATABASE_USERNAME: "${DATABASE_USERNAME}"
        DATABASE_PASSWORD: "${DATABASE_PASSWORD}"
        FLYWAY_SCHEMA: "flyway_platform"
        FLYWAY_SCRIPTS_DIR: "postgres"
    env_file: .env
    ports:
      - "${PLATFORM_SPRING_PORT}:${PLATFORM_SPRING_PORT}"

  # Metaservice Spring Boot app
  metaservice:
    container_name: "odm-metaservice"
    depends_on:
      - PostgreSQL
    build:
      context: odm-platform-up-services-meta-blindata/
      args:
        SPRING_PROFILES_ACTIVE_BUILD: "dev"
        SPRING_PROFILES_ACTIVE: "docker"
        SPRING_PORT: "${METASERVICE_SPRING_PORT}"
        JAVA_OPTS: ""
        DATABASE_URL: "jdbc:postgresql://PostgreSQL:${DATABASE_PORT}/${DATABASE_NAME}"
        DATABASE_USERNAME: "${DATABASE_USERNAME}"
        DATABASE_PASSWORD: "${DATABASE_PASSWORD}"
        FLYWAY_SCHEMA: "flyway_metaservice"
        FLYWAY_SCRIPTS_DIR: "postgres"
    env_file: .env
    ports:
      - "${METASERVICE_SPRING_PORT}:${METASERVICE_SPRING_PORT}"

volumes:
  postgres: